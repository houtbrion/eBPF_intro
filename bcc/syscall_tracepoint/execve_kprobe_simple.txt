 1: #!/usr/bin/python3
 2: # -*- coding: utf-8 -*-
 3: 
 4: from bcc import BPF
 5: from bcc.utils import printb
 6: 
 7: # eBPFのVMにロードさせるプログラムのCコードを文字列として定義
 8: bpf_text = """
 9: int kprobe__execve(struct pt_regs *ctx)
10: {
11: 	bpf_trace_printk("start of execve\\n");
12: 	return 0;
13: };
14: """
15: 
16: # VMに文字列として定義したプログラムをロードさせる
17: # tracepointへの割り付けは自動(Cコードで「kprobe__execve」を定義)
18: b = BPF(text=bpf_text)
19: 
20: # ヘッダの出力
21: print("%-6s %-12s %s" % ("PID", "COMM", "OUTPUT"))
22: 
23: # eBPFの通知を無限ループで順次受けて出力
24: while 1:
25:         # Read messages from kernel pipe
26:         try:
27:             (task, pid, cpu, flags, ts, msg) = b.trace_fields()
28:         except ValueError:
29:             # Ignore messages from other tracers
30:             continue
31:         except KeyboardInterrupt:
32:             # Ctrl-Cでループから脱出
33:             exit()
34: 
35:         printb(b"%-6d %-12.12s %s" % (pid, task, msg))
36: 
37: 
